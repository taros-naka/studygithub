#!/bin/bash
# # ファイル名: Redmine_backup.sh
# # Redmineのバックアップスクリプト
# コマンド：redmine_backup.sh [-db|-wb|-b] 
# options:[-db:デイリーバックアップ|-wb：ウィークリーバックアップ|-b：バックアップ]
# # 引数：-db, -wb, -b
# # 引数がない場合は、コマンド終了、echoでメッセージを表示
# # 引数がある場合は、引数に応じた処理を実行
###############################################################################
# 前提チェック
###############################################################################
[[ $EUID -eq 0 ]] || { echo "root で実行してください"; exit 1; }

###############################################################################
# 変数定義 
###############################################################################
OPTION=$1
BACKUP_DIR="/var/backup/redmine"
REDMINE_DIR="/var/www/redmine"
DAILY_BACKUP_DIR="$BACKUP_DIR/daily"
WEEKLY_BACKUP_DIR="$BACKUP_DIR/weekly"
DATA=$(date +%Y%m%d_%H%M%S)

# Log_out.shのパス
LOG_OUT="./log_out.sh"

# データベース(postgresql)の設定
db_name="redmine"
db_user="redmine"
db_password="redmine"
db_host="localhost"

# OPTIONのターゲット
TARGETS=(
  "-db" # デイリーバックアップ
  "-wb" # ウィークリーバックアップ
  "-b"  # バックアップ
)


###############################################################################
# バックアップディレクトリの作成
###############################################################################
# バックアップフォルダがなければ作成、所有権限変更
if [ ! -d "$BACKUP_DIR" ]; then
  mkdir -p "$BACKUP_DIR"
  chown -R root:www-data "$BACKUP_DIR"
  chmod -R 750 "$BACKUP_DIR"
  echo "=== バックアップディレクトリを作成しました ==="
fi
#################################################################################
# optionごとの処理分岐
#################################################################################
# case文で処理分岐
case_command() {
    case $OPTION in
    -db) # デイリーバックアップ
        echo "=== デイリーバックアップを実行 ==="
        make_backup_dir "$DAILY_BACKUP_DIR"
        ;;
    -wb) # ウィークリーバックアップ
        echo "=== ウィークリーバックアップを実行 ==="
        ;;
    -b) # バックアップ
        echo "=== バックアップを実行 ==="
        ;;
    *)
        echo "=== 引数が不正です ==="
        # ログ出力コマンド
        echo "引数が指定されていません。使用方法: redmine_backup.sh [-db|-wb|-b]"
        $LOG_OUT "引数が不正です" ERRR 
        exit 1
        ;;
    esac
}

###############################################################################
# バックアップ処理のフォルダ作成(共通）
###############################################################################
# バックアップフォルダがなければ作成、所有権限変更
make_backup_dir() {
  local dir="$1"
  if [ ! -d "$dir" ]; then
    mkdir -p "$dir"
    chown -R root:www-data "$dir"
    chmod -R 750 "$dir"
    echo "=== バックアップ処理のフォルダを作成しました ==="
    echo "=== バックアップフォルダ: $dir ==="
  fi
}
